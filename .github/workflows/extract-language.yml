name: Images modification based on language of the notebook

on:
#   push:
#     paths:
#       - 'media/**'      # Trigger when media is modified
  workflow_dispatch:         # Allows manual triggering of the workflow

jobs:
  extract-and-act:
    runs-on: ubuntu-latest

    steps:
      # 1. Prevent Infinite Loops by Skipping Actions Commits
      - name: Prevent Infinite Loop
        if: github.actor == 'github-actions[bot]'
        run: |
          echo "Commit made by GitHub Actions. Skipping workflow execution."
          exit 0

      # 2. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 3. Install jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      # 4. Install ImageMagick
      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      # 5. Extract language_info.name using jq
      - name: Extract language_info.name
        id: extract_lang_name
        run: |
          # Extract the language_info.name field
          LANGUAGE_NAME=$(jq -r '.metadata.language_info.name // "Not Found"' article.ipynb)
          
          echo "### Extracted language_info.name: $LANGUAGE_NAME"
          
          # Set the extracted value as an output variable
          echo "lang_name=$LANGUAGE_NAME" >> $GITHUB_OUTPUT

      # Conditional action: If Language is R
      - name: Converting from jpg to png (language=R)
        if: steps.extract_lang_name.outputs.lang_name == 'R'
        run: |
          echo "Language is R. Performing R-specific actions..."
          # Navigate to the media directory
          cd media
          
          # Find all .jpeg and .jpg files recursively
          find . -type f \( -iname "*.jpeg" -o -iname "*.jpg" \) | while read -r file; do
            # Define the new PNG file name
            png_file="${file%.*}.png"
            
            # Check if PNG already exists and is up-to-date
            if [ ! -f "$png_file" ] || [ "$file" -nt "$png_file" ]; then
              # Convert JPEG/JPG to PNG
              convert "$file" -density 72 -units PixelsPerInch "$png_file"
              echo "Converted $file to $png_file with 72 DPI resolution."
              
              # Delete the original JPEG/JPG file
              rm "$file"
              echo "Deleted original file $file"
              ls
            else
              echo "Skipped $file; PNG is up-to-date."
            fi
          done
          
      # Conditional Action: If Language is Not R
      - name: Doing nothing for non-R
        if: steps.extract_lang_name.outputs.lang_name != 'R'
        run: |
          echo "Language is not R. Keeping images the same"
      # Notify the Result
      - name: Notify Result
        run: |
          if [ "${{ steps.extract_lang_name.outputs.lang_name }}" = "R" ]; then
            echo "has R as language"
          else
            echo "doesn't have R as running language"
          fi
      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
            commit_message: "Convert JPEG images to PNG format"
            branch: main # Ensures commits are made to the current branch
